// Generated by Dagger (https://dagger.dev).
package com.example.shopping.domain.useCase;

import com.example.shopping.domain.repo.Repo;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetBannerUseCase_Factory implements Factory<GetBannerUseCase> {
  private final Provider<Repo> repoProvider;

  public GetBannerUseCase_Factory(Provider<Repo> repoProvider) {
    this.repoProvider = repoProvider;
  }

  @Override
  public GetBannerUseCase get() {
    return newInstance(repoProvider.get());
  }

  public static GetBannerUseCase_Factory create(Provider<Repo> repoProvider) {
    return new GetBannerUseCase_Factory(repoProvider);
  }

  public static GetBannerUseCase newInstance(Repo repo) {
    return new GetBannerUseCase(repo);
  }
}
