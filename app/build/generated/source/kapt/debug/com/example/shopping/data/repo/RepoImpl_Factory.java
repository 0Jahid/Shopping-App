// Generated by Dagger (https://dagger.dev).
package com.example.shopping.data.repo;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.FirebaseFirestore;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RepoImpl_Factory implements Factory<RepoImpl> {
  private final Provider<FirebaseAuth> firebaseAuthProvider;

  private final Provider<FirebaseFirestore> firebaseFirestoreProvider;

  public RepoImpl_Factory(Provider<FirebaseAuth> firebaseAuthProvider,
      Provider<FirebaseFirestore> firebaseFirestoreProvider) {
    this.firebaseAuthProvider = firebaseAuthProvider;
    this.firebaseFirestoreProvider = firebaseFirestoreProvider;
  }

  @Override
  public RepoImpl get() {
    return newInstance(firebaseAuthProvider.get(), firebaseFirestoreProvider.get());
  }

  public static RepoImpl_Factory create(Provider<FirebaseAuth> firebaseAuthProvider,
      Provider<FirebaseFirestore> firebaseFirestoreProvider) {
    return new RepoImpl_Factory(firebaseAuthProvider, firebaseFirestoreProvider);
  }

  public static RepoImpl newInstance(FirebaseAuth firebaseAuth,
      FirebaseFirestore firebaseFirestore) {
    return new RepoImpl(firebaseAuth, firebaseFirestore);
  }
}
